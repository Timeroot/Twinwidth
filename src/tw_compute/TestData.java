package tw_compute;

public class TestData {
	//messy class for holding "data" for the Testing class.
	static Graph getGraph006() {
		//This is the "reduced" graph (after detwinning and separating complements) for exact_006.
		Graph g0 = new Graph(); g0.expandBy(28);
		g0.addEdge(0, 1);
		g0.addEdge(0, 2);
		g0.addEdge(0, 3);
		g0.addEdge(0, 4);
		g0.addEdge(0, 5);
		g0.addEdge(0, 6);
		g0.addEdge(0, 7);
		g0.addEdge(0, 8);
		g0.addEdge(0, 9);
		g0.addEdge(0, 10);
		g0.addEdge(0, 11);
		g0.addEdge(1, 4);
		g0.addEdge(1, 7);
		g0.addEdge(1, 11);
		g0.addEdge(1, 17);
		g0.addEdge(1, 21);
		g0.addEdge(1, 22);
		g0.addEdge(1, 23);
		g0.addEdge(2, 5);
		g0.addEdge(2, 6);
		g0.addEdge(2, 8);
		g0.addEdge(2, 9);
		g0.addEdge(2, 12);
		g0.addEdge(2, 14);
		g0.addEdge(2, 20);
		g0.addEdge(2, 26);
		g0.addEdge(3, 4);
		g0.addEdge(3, 6);
		g0.addEdge(3, 7);
		g0.addEdge(3, 8);
		g0.addEdge(3, 10);
		g0.addEdge(3, 11);
		g0.addEdge(3, 12);
		g0.addEdge(3, 15);
		g0.addEdge(3, 17);
		g0.addEdge(3, 19);
		g0.addEdge(3, 20);
		g0.addEdge(3, 21);
		g0.addEdge(4, 6);
		g0.addEdge(4, 7);
		g0.addEdge(4, 8);
		g0.addEdge(4, 19);
		g0.addEdge(4, 20);
		g0.addEdge(4, 25);
		g0.addEdge(5, 8);
		g0.addEdge(5, 12);
		g0.addEdge(5, 13);
		g0.addEdge(5, 14);
		g0.addEdge(5, 15);
		g0.addEdge(5, 16);
		g0.addEdge(5, 19);
		g0.addEdge(5, 21);
		g0.addEdge(5, 22);
		g0.addEdge(6, 7);
		g0.addEdge(6, 8);
		g0.addEdge(6, 12);
		g0.addEdge(6, 13);
		g0.addEdge(6, 14);
		g0.addEdge(6, 15);
		g0.addEdge(6, 17);
		g0.addEdge(7, 10);
		g0.addEdge(7, 12);
		g0.addEdge(7, 15);
		g0.addEdge(7, 17);
		g0.addEdge(7, 22);
		g0.addEdge(7, 25);
		g0.addEdge(8, 12);
		g0.addEdge(8, 14);
		g0.addEdge(8, 15);
		g0.addEdge(8, 21);
		g0.addEdge(8, 23);
		g0.addEdge(8, 25);
		g0.addEdge(8, 26);
		g0.addEdge(9, 11);
		g0.addEdge(9, 14);
		g0.addEdge(9, 15);
		g0.addEdge(9, 16);
		g0.addEdge(9, 17);
		g0.addEdge(9, 18);
		g0.addEdge(9, 20);
		g0.addEdge(9, 22);
		g0.addEdge(9, 25);
		g0.addEdge(9, 26);
		g0.addEdge(9, 27);
		g0.addEdge(10, 12);
		g0.addEdge(10, 15);
		g0.addEdge(10, 17);
		g0.addEdge(10, 21);
		g0.addEdge(10, 25);
		g0.addEdge(11, 12);
		g0.addEdge(11, 13);
		g0.addEdge(11, 19);
		g0.addEdge(11, 20);
		g0.addEdge(11, 22);
		g0.addEdge(12, 13);
		g0.addEdge(12, 14);
		g0.addEdge(12, 15);
		g0.addEdge(12, 16);
		g0.addEdge(12, 17);
		g0.addEdge(13, 14);
		g0.addEdge(13, 15);
		g0.addEdge(13, 17);
		g0.addEdge(13, 18);
		g0.addEdge(13, 19);
		g0.addEdge(13, 20);
		g0.addEdge(14, 15);
		g0.addEdge(14, 16);
		g0.addEdge(14, 22);
		g0.addEdge(14, 26);
		g0.addEdge(15, 17);
		g0.addEdge(15, 23);
		g0.addEdge(15, 26);
		g0.addEdge(15, 27);
		g0.addEdge(16, 20);
		g0.addEdge(16, 22);
		g0.addEdge(16, 25);
		g0.addEdge(16, 26);
		g0.addEdge(17, 21);
		g0.addEdge(17, 22);
		g0.addEdge(17, 25);
		g0.addEdge(17, 27);
		g0.addEdge(19, 21);
		g0.addEdge(19, 25);
		g0.addEdge(20, 21);
		g0.addEdge(20, 22);
		g0.addEdge(21, 23);
		g0.addEdge(21, 25);
		g0.addEdge(21, 26);
		g0.addEdge(24, 25);
		g0.addEdge(25, 26);
		g0.addEdge(26, 27);
		return g0;
	}
	
	//This chunk is from exact_040. It's easy to find a TWW 3 solution, but hard to check
	//if there's a TWW 2 solution. (I currently don't know whether there is.)
	static Graph get040Chunk() {
		Graph g0 = new Graph(); g0.expandBy(22);
		g0.addEdge(0, 1);
		g0.addEdge(0, 2);
		g0.addEdge(0, 3);
		g0.addEdge(0, 4);
		g0.addEdge(1, 2);
		g0.addEdge(1, 5);
		g0.addEdge(1, 6);
		g0.addEdge(1, 7);
		g0.addEdge(1, 8);
		g0.addEdge(2, 8);
		g0.addEdge(2, 9);
		g0.addEdge(3, 8);
		g0.addEdge(3, 9);
		g0.addEdge(5, 6);
		g0.addEdge(5, 10);
		g0.addEdge(6, 7);
		g0.addEdge(7, 8);
		g0.addEdge(7, 11);
		g0.addEdge(7, 12);
		g0.addEdge(7, 13);
		g0.addEdge(8, 9);
		g0.addEdge(8, 11);
		g0.addEdge(8, 12);
		g0.addEdge(8, 14);
		g0.addEdge(8, 15);
		g0.addEdge(8, 16);
		g0.addEdge(10, 17);
		g0.addEdge(11, 13);
		g0.addEdge(12, 18);
		g0.addEdge(14, 15);
		g0.addEdge(14, 21);
		g0.addEdge(16, 19);
		g0.addEdge(17, 20);
		g0.addEdge(19, 20);
		return g0;
	}
}
